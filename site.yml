# Ansible Playbook for Subutai Blockchain II blueprint
#
# Implemented by Lars Boegild Thomsen <lbthomsen@gmail.com>
#
---

- hosts: all
  remote_user: root

  tasks:

    - name: Disable dpkg fsync
      shell: echo force-unsafe-io > /etc/dpkg/dpkg.cfg.d/unsafe-io
      args: 
        creates: /etc/dpkg/dpkg.cfg.d/unsafe-io

    - name: Create biab user
      user:
        name: biab
        group: users
        shell: /bin/bash

    - name: Install dirmngr
      apt:
        name: dirmngr
        state: present

    - name: Install apt-transport-https
      apt:
        name: apt-transport-https
        state: present

    - name: Add ethereum repo key
      apt_key:
        id: 1C52189C923F6CA9
        keyserver: keyserver.ubuntu.com

    - name: Add node repo key
      apt_key:
        id: 1655A0AB68576280
        keyserver: keyserver.ubuntu.com

    - name: Add node repo
      apt_repository:
        repo: deb http://ppa.launchpad.net/ethereum/ethereum/ubuntu xenial main
        state: present

    - name: Add node repo
      apt_repository:
        repo: deb https://deb.nodesource.com/node_8.x stretch main
        state: present

    - name: Upgrade debian
      apt:
        update_cache: true
        upgrade: true

    - name: Install required debs
      apt:
        name: "{{ item }}"
        state: present
      with_items: 
        - sudo
        - ethereum-unstable
        - net-tools
        - aptitude
        - screen

- hosts: bn
  remote_user: root
  tasks:

    - name: Generate bootnode key
      shell: bootnode -genkey /etc/bootnode.key
      args: 
        creates: /etc/bootnode.key

    - name: Install bootnode service
      template:
        src: files/bootnode.service
        dest: /lib/systemd/system

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Make sure bootnode.service is enabled
      shell: systemctl enable bootnode
      args:
        creates: /etc/systemd/system/multi-user.target.wants/bootnode.service

    - name: Restart bootnode
      systemd:
        name: bootnode
        state: restarted

- hosts: all
  remote_user: root
  tasks:

    - name: Fetch bootnode key
      shell: "bootnode --nodekey /etc/bootnode.key --writeaddress"
      register: bootnode_key_fetch
      when: inventory_hostname == groups.bn[0]

    - name: Store bootnode key
      set_fact: 
        bootnode_key: "{{ bootnode_key_fetch.stdout }}"
      when: bootnode_key_fetch.changed

    - name: Copy Genesis
      template:
        src: files/genesis.json
        dest: /home/biab/genesis.json
        owner: biab
        group: users

    - name: Initialize blockchain
      shell: geth --datadir .ethereum/{{ ethereum_network }} init /home/biab/genesis.json
      args: 
        creates: /home/biab/.ethereum/{{ ethereum_network }}/geth/chaindata/CURRENT
      become: yes
      become_user: biab

    - name: Set geth default
      template:
        src: files/geth.default
        dest: /etc/default/geth
      notify: restart geth

    - name: Install geth.service
      template: 
        src: files/geth.service
        dest: /lib/systemd/system
      notify: restart geth

    - name: Reload systemd
      systemd:
        name: geth
        state: started
        daemon_reload: yes
      notify: restart geth

    - name: Make sure geth.service is enabled
      shell: systemctl enable geth
      args:
        creates: /etc/systemd/system/multi-user.target.wants/geth.service
      notify: restart geth

  handlers:

    - name: restart geth
      systemd:
        name: geth
        state: restarted

- hosts: all
  remote_user: root
  tasks:

    - name: Fetch id for each node
      shell: geth --exec "admin.nodeInfo.id" attach /home/biab/.ethereum/{{ ethereum_network }}/geth.ipc
      register: fetch_id

    - name: Set bootnodes
      template:
        src: files/static-nodes.json
        dest: /home/biab/.ethereum/{{ ethereum_network }}/geth/static-nodes.json
      become: yes
      become_user: biab
      register: bootnodes

    - name: restart geth
      systemd:
        name: geth
        state: restarted
      when: bootnodes.changed

- hosts: bn
  remote_user: root
  tasks:

    - name: Install required debs
      apt:
        name: "{{ item }}"
        state: present
      with_items: 
        - apache2
        - nodejs
        - dnsutils
      register: apache2

    - name: Disable apache modules
      shell: a2dismod {{ item }}
      with_items:
        - mpm_worker
        - mpm_event

    - name: Enable apache modules
      shell: a2enmod {{ item }}
      with_items: 
        - mpm_prefork
        - cgi

    - name: Install sudoers
      template:
        src: files/sudoers
        dest: /etc/sudoers

    - name: Make www-data member of sudo
      user:
        name: www-data
        groups: sudo
      register: apache2

    - name: Install root html
      template:
        src: files/index.html
        dest: /var/www/html
      register: apache2

    - name: Intall genesis.cgi
      template:
        src: files/genesis.cgi
        dest: /usr/lib/cgi-bin/genesis
        mode: 0755
      register: apache2

    - name: Intall nodeinfo.cgi
      template:
        src: files/nodeinfo.cgi
        dest: /usr/lib/cgi-bin/nodeinfo
        mode: 0755
      register: apache2

    - name: Restart apache
      systemd:
        name: apache2
        state: restarted
      when: apache2.changed

- hosts: m
  remote_user: root
  tasks:

    - name: Start miner
      shell: geth --exec "miner.start()" attach /home/biab/.ethereum/{{ ethereum_network }}/geth.ipc
      become: yes
      become_user: biab

# vim: ts=4 et nowrap autoindent